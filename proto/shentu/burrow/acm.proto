syntax = 'proto3';

package acm;

option go_package = "github.com/hyperledger/burrow/acm";
option java_package = "shentu.burrow.v1alpha1";

import "gogoproto/gogo.proto";

import "shentu/burrow/permission.proto";
import "shentu/burrow/crypto.proto";

option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

message Account {
    option (gogoproto.goproto_stringer) = false;
    bytes Address = 1 [(gogoproto.customtype) = "github.com/hyperledger/burrow/crypto.Address", (gogoproto.nullable) = false];
    crypto.PublicKey PublicKey = 2 [(gogoproto.nullable) = false];
    // Sequence counts the number of transactions that have been accepted from this account
    uint64 Sequence = 3;
    // The account's current native token balance
    uint64 Balance = 4;
    // We expect exactly one of EVMCode, WASMCode, and NativeName to be non-empty
    // EVM bytecode
    bytes EVMCode = 5 [(gogoproto.customtype) = "Bytecode", (gogoproto.nullable) = false];
    permission.AccountPermissions Permissions = 6 [(gogoproto.nullable) = false];
    // WASM bytecode
    bytes WASMCode = 7 [(gogoproto.customtype) = "Bytecode", (gogoproto.jsontag) = ",omitempty", (gogoproto.nullable) = false];
    // Fully qualified (`<contract name>.<function name>`) name of native contract this for which this account object
    // is a sentinel value. Which is to say this account object is a pointer to compiled code and does not contain
    // the contract logic in its entirety
    string NativeName = 11 [(gogoproto.jsontag) = ",omitempty"];
    // The sha3 hash of the code associated with the account
    bytes CodeHash = 8 [(gogoproto.customtype) = "github.com/hyperledger/burrow/binary.HexBytes", (gogoproto.nullable) = false, (gogoproto.jsontag) = "-"];
    // Pointer to the Metadata associated with this account
    repeated ContractMeta ContractMeta = 9;
    // The metadata is stored in the deployed account. When the deployed account creates new account
    // (from Solidity/EVM), they point to the original deployed account where the metadata is stored.
    // This original account is called the forebear.
    bytes Forebear = 10 [(gogoproto.customtype) = "github.com/hyperledger/burrow/crypto.Address"];
}

message ContractMeta {
    bytes CodeHash = 1 [(gogoproto.customtype) = "github.com/hyperledger/burrow/binary.HexBytes", (gogoproto.nullable) = false];
    bytes MetadataHash = 2 [(gogoproto.customtype) = "github.com/hyperledger/burrow/binary.HexBytes", (gogoproto.nullable) = false];
    // In the dump format we would like the ABI rather than its hash
    string Metadata = 3;
}
