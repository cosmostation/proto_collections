syntax = "proto3";
package shentu.cert.v1alpha1;

import "gogoproto/gogo.proto";
import "google/protobuf2/any.proto"; 
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/certikfoundation/shentu/x/cert/types";

// Msg defines the shield Msg service.
service Msg {
    rpc ProposeCertifier(MsgProposeCertifier) returns (MsgProposeCertifierResponse);
    rpc IssueCertificate(MsgIssueCertificate) returns (MsgIssueCertificateResponse);
    rpc RevokeCertificate(MsgRevokeCertificate) returns (MsgRevokeCertificateResponse);
    rpc CertifyPlatform(MsgCertifyPlatform) returns (MsgCertifyPlatformResponse);
}

// MsgProposeCertifier is the message for proposing new certifier.
message MsgProposeCertifier {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string proposer = 1 [ (gogoproto.moretags) = "yaml:\"proposer\"" ];
    string alias = 2 [ (gogoproto.moretags) = "yaml:\"alias\"" ];
    string certifier = 3 [ (gogoproto.moretags) = "yaml:\"certifier\"" ];
    string description = 4 [ (gogoproto.moretags) = "yaml:\"description\"" ];
}

message MsgProposeCertifierResponse {}

// MsgCertifyGeneral is the message for issuing a general certificate.
message MsgIssueCertificate {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    google.protobuf.Any content = 1 [ (cosmos_proto.accepts_interface) = "Content" ];
    string compiler = 2 [ (gogoproto.moretags) = "yaml:\"compiler\"" ];
    string bytecode_hash = 3 [ (gogoproto.moretags) = "yaml:\"bytecodehash\"" ];
    string description = 4 [ (gogoproto.moretags) = "yaml:\"description\"" ];
    string certifier = 5 [ (gogoproto.moretags) = "yaml:\"certifier\"" ];
}

message MsgIssueCertificateResponse {}

// MsgRevokeCertificate returns a certificate revoking operation.
message MsgRevokeCertificate {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string revoker = 1 [ (gogoproto.moretags) = "yaml:\"revoker\"" ];
    uint64 id = 2 [ (gogoproto.moretags) = "yaml:\"id\"" ];
    string description = 3 [ (gogoproto.moretags) = "yaml:\"description\"" ];
}

message MsgRevokeCertificateResponse {}

// MsgCertifyPlatform is the message for certifying a validator's host platform.
message MsgCertifyPlatform {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string certifier = 1 [ (gogoproto.moretags) = "yaml:\"certifier\"" ];
    google.protobuf.Any validator_pubkey = 2 [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
    string platform = 3 [ (gogoproto.moretags) = "yaml:\"platform\"" ];
}

message MsgCertifyPlatformResponse {}
