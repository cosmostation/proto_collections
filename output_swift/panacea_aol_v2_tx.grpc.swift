//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: panacea/aol/v2/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the Msg service.
///
/// Usage: instantiate `Panacea_Aol_V2_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Panacea_Aol_V2_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Panacea_Aol_V2_MsgClientInterceptorFactoryProtocol? { get }

  func createTopic(
    _ request: Panacea_Aol_V2_MsgCreateTopic,
    callOptions: CallOptions?
  ) -> UnaryCall<Panacea_Aol_V2_MsgCreateTopic, Panacea_Aol_V2_MsgCreateTopicResponse>

  func addWriter(
    _ request: Panacea_Aol_V2_MsgAddWriter,
    callOptions: CallOptions?
  ) -> UnaryCall<Panacea_Aol_V2_MsgAddWriter, Panacea_Aol_V2_MsgAddWriterResponse>

  func deleteWriter(
    _ request: Panacea_Aol_V2_MsgDeleteWriter,
    callOptions: CallOptions?
  ) -> UnaryCall<Panacea_Aol_V2_MsgDeleteWriter, Panacea_Aol_V2_MsgDeleteWriterResponse>

  func addRecord(
    _ request: Panacea_Aol_V2_MsgAddRecord,
    callOptions: CallOptions?
  ) -> UnaryCall<Panacea_Aol_V2_MsgAddRecord, Panacea_Aol_V2_MsgAddRecordResponse>
}

extension Panacea_Aol_V2_MsgClientProtocol {
  internal var serviceName: String {
    return "panacea.aol.v2.Msg"
  }

  /// CreateTopic defines a method for creating a topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTopic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createTopic(
    _ request: Panacea_Aol_V2_MsgCreateTopic,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Panacea_Aol_V2_MsgCreateTopic, Panacea_Aol_V2_MsgCreateTopicResponse> {
    return self.makeUnaryCall(
      path: "/panacea.aol.v2.Msg/CreateTopic",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateTopicInterceptors() ?? []
    )
  }

  /// AddWriter defines a method for adding a writer to the topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddWriter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addWriter(
    _ request: Panacea_Aol_V2_MsgAddWriter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Panacea_Aol_V2_MsgAddWriter, Panacea_Aol_V2_MsgAddWriterResponse> {
    return self.makeUnaryCall(
      path: "/panacea.aol.v2.Msg/AddWriter",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddWriterInterceptors() ?? []
    )
  }

  /// DeleteWriter defines a method for deleting a writer to the topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWriter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteWriter(
    _ request: Panacea_Aol_V2_MsgDeleteWriter,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Panacea_Aol_V2_MsgDeleteWriter, Panacea_Aol_V2_MsgDeleteWriterResponse> {
    return self.makeUnaryCall(
      path: "/panacea.aol.v2.Msg/DeleteWriter",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteWriterInterceptors() ?? []
    )
  }

  /// AddRecord defines a method for adding a record to the topic with the writer.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddRecord.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addRecord(
    _ request: Panacea_Aol_V2_MsgAddRecord,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Panacea_Aol_V2_MsgAddRecord, Panacea_Aol_V2_MsgAddRecordResponse> {
    return self.makeUnaryCall(
      path: "/panacea.aol.v2.Msg/AddRecord",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddRecordInterceptors() ?? []
    )
  }
}

internal protocol Panacea_Aol_V2_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'createTopic'.
  func makeCreateTopicInterceptors() -> [ClientInterceptor<Panacea_Aol_V2_MsgCreateTopic, Panacea_Aol_V2_MsgCreateTopicResponse>]

  /// - Returns: Interceptors to use when invoking 'addWriter'.
  func makeAddWriterInterceptors() -> [ClientInterceptor<Panacea_Aol_V2_MsgAddWriter, Panacea_Aol_V2_MsgAddWriterResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteWriter'.
  func makeDeleteWriterInterceptors() -> [ClientInterceptor<Panacea_Aol_V2_MsgDeleteWriter, Panacea_Aol_V2_MsgDeleteWriterResponse>]

  /// - Returns: Interceptors to use when invoking 'addRecord'.
  func makeAddRecordInterceptors() -> [ClientInterceptor<Panacea_Aol_V2_MsgAddRecord, Panacea_Aol_V2_MsgAddRecordResponse>]
}

internal final class Panacea_Aol_V2_MsgClient: Panacea_Aol_V2_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Panacea_Aol_V2_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the panacea.aol.v2.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Panacea_Aol_V2_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Panacea_Aol_V2_MsgProvider: CallHandlerProvider {
  var interceptors: Panacea_Aol_V2_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateTopic defines a method for creating a topic.
  func createTopic(request: Panacea_Aol_V2_MsgCreateTopic, context: StatusOnlyCallContext) -> EventLoopFuture<Panacea_Aol_V2_MsgCreateTopicResponse>

  /// AddWriter defines a method for adding a writer to the topic.
  func addWriter(request: Panacea_Aol_V2_MsgAddWriter, context: StatusOnlyCallContext) -> EventLoopFuture<Panacea_Aol_V2_MsgAddWriterResponse>

  /// DeleteWriter defines a method for deleting a writer to the topic.
  func deleteWriter(request: Panacea_Aol_V2_MsgDeleteWriter, context: StatusOnlyCallContext) -> EventLoopFuture<Panacea_Aol_V2_MsgDeleteWriterResponse>

  /// AddRecord defines a method for adding a record to the topic with the writer.
  func addRecord(request: Panacea_Aol_V2_MsgAddRecord, context: StatusOnlyCallContext) -> EventLoopFuture<Panacea_Aol_V2_MsgAddRecordResponse>
}

extension Panacea_Aol_V2_MsgProvider {
  internal var serviceName: Substring { return "panacea.aol.v2.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateTopic":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Panacea_Aol_V2_MsgCreateTopic>(),
        responseSerializer: ProtobufSerializer<Panacea_Aol_V2_MsgCreateTopicResponse>(),
        interceptors: self.interceptors?.makeCreateTopicInterceptors() ?? [],
        userFunction: self.createTopic(request:context:)
      )

    case "AddWriter":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Panacea_Aol_V2_MsgAddWriter>(),
        responseSerializer: ProtobufSerializer<Panacea_Aol_V2_MsgAddWriterResponse>(),
        interceptors: self.interceptors?.makeAddWriterInterceptors() ?? [],
        userFunction: self.addWriter(request:context:)
      )

    case "DeleteWriter":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Panacea_Aol_V2_MsgDeleteWriter>(),
        responseSerializer: ProtobufSerializer<Panacea_Aol_V2_MsgDeleteWriterResponse>(),
        interceptors: self.interceptors?.makeDeleteWriterInterceptors() ?? [],
        userFunction: self.deleteWriter(request:context:)
      )

    case "AddRecord":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Panacea_Aol_V2_MsgAddRecord>(),
        responseSerializer: ProtobufSerializer<Panacea_Aol_V2_MsgAddRecordResponse>(),
        interceptors: self.interceptors?.makeAddRecordInterceptors() ?? [],
        userFunction: self.addRecord(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Panacea_Aol_V2_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createTopic'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateTopicInterceptors() -> [ServerInterceptor<Panacea_Aol_V2_MsgCreateTopic, Panacea_Aol_V2_MsgCreateTopicResponse>]

  /// - Returns: Interceptors to use when handling 'addWriter'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddWriterInterceptors() -> [ServerInterceptor<Panacea_Aol_V2_MsgAddWriter, Panacea_Aol_V2_MsgAddWriterResponse>]

  /// - Returns: Interceptors to use when handling 'deleteWriter'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteWriterInterceptors() -> [ServerInterceptor<Panacea_Aol_V2_MsgDeleteWriter, Panacea_Aol_V2_MsgDeleteWriterResponse>]

  /// - Returns: Interceptors to use when handling 'addRecord'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeAddRecordInterceptors() -> [ServerInterceptor<Panacea_Aol_V2_MsgAddRecord, Panacea_Aol_V2_MsgAddRecordResponse>]
}
