//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: bitsong/auction/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the Auction Msg service
///
/// Usage: instantiate `Bitsong_Auction_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Bitsong_Auction_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Bitsong_Auction_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func openAuction(
    _ request: Bitsong_Auction_V1beta1_MsgOpenAuction,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgOpenAuction, Bitsong_Auction_V1beta1_MsgOpenAuctionResponse>

  func editAuction(
    _ request: Bitsong_Auction_V1beta1_MsgEditAuction,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgEditAuction, Bitsong_Auction_V1beta1_MsgEditAuctionResponse>

  func cancelAuction(
    _ request: Bitsong_Auction_V1beta1_MsgCancelAuction,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgCancelAuction, Bitsong_Auction_V1beta1_MsgCancelAuctionResponse>

  func openBid(
    _ request: Bitsong_Auction_V1beta1_MsgOpenBid,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgOpenBid, Bitsong_Auction_V1beta1_MsgOpenBidResponse>

  func cancelBid(
    _ request: Bitsong_Auction_V1beta1_MsgCancelBid,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgCancelBid, Bitsong_Auction_V1beta1_MsgCancelBidResponse>

  func withdraw(
    _ request: Bitsong_Auction_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgWithdraw, Bitsong_Auction_V1beta1_MsgWithdrawResponse>
}

extension Bitsong_Auction_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "bitsong.auction.v1beta1.Msg"
  }

  /// OpenAuction defines a method for opening an auction
  ///
  /// - Parameters:
  ///   - request: Request to send to OpenAuction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func openAuction(
    _ request: Bitsong_Auction_V1beta1_MsgOpenAuction,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgOpenAuction, Bitsong_Auction_V1beta1_MsgOpenAuctionResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/OpenAuction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOpenAuctionInterceptors() ?? []
    )
  }

  /// EditAuction defines a method for editting an auction
  ///
  /// - Parameters:
  ///   - request: Request to send to EditAuction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editAuction(
    _ request: Bitsong_Auction_V1beta1_MsgEditAuction,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgEditAuction, Bitsong_Auction_V1beta1_MsgEditAuctionResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/EditAuction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditAuctionInterceptors() ?? []
    )
  }

  /// CancelAuction defines a method for cancelling an auction
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelAuction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelAuction(
    _ request: Bitsong_Auction_V1beta1_MsgCancelAuction,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgCancelAuction, Bitsong_Auction_V1beta1_MsgCancelAuctionResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/CancelAuction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelAuctionInterceptors() ?? []
    )
  }

  /// OpenBid defines a method for opening a bid for an auction
  ///
  /// - Parameters:
  ///   - request: Request to send to OpenBid.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func openBid(
    _ request: Bitsong_Auction_V1beta1_MsgOpenBid,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgOpenBid, Bitsong_Auction_V1beta1_MsgOpenBidResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/OpenBid",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOpenBidInterceptors() ?? []
    )
  }

  /// CancelBid defines a method for cancelling a bid for an auction
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelBid.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelBid(
    _ request: Bitsong_Auction_V1beta1_MsgCancelBid,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgCancelBid, Bitsong_Auction_V1beta1_MsgCancelBidResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/CancelBid",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelBidInterceptors() ?? []
    )
  }

  /// Withdraw defines a method for withdrawing nft for an auction winner
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Bitsong_Auction_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bitsong_Auction_V1beta1_MsgWithdraw, Bitsong_Auction_V1beta1_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: "/bitsong.auction.v1beta1.Msg/Withdraw",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }
}

internal protocol Bitsong_Auction_V1beta1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'openAuction'.
  func makeOpenAuctionInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgOpenAuction, Bitsong_Auction_V1beta1_MsgOpenAuctionResponse>]

  /// - Returns: Interceptors to use when invoking 'editAuction'.
  func makeEditAuctionInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgEditAuction, Bitsong_Auction_V1beta1_MsgEditAuctionResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelAuction'.
  func makeCancelAuctionInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgCancelAuction, Bitsong_Auction_V1beta1_MsgCancelAuctionResponse>]

  /// - Returns: Interceptors to use when invoking 'openBid'.
  func makeOpenBidInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgOpenBid, Bitsong_Auction_V1beta1_MsgOpenBidResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelBid'.
  func makeCancelBidInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgCancelBid, Bitsong_Auction_V1beta1_MsgCancelBidResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Bitsong_Auction_V1beta1_MsgWithdraw, Bitsong_Auction_V1beta1_MsgWithdrawResponse>]
}

internal final class Bitsong_Auction_V1beta1_MsgClient: Bitsong_Auction_V1beta1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Bitsong_Auction_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the bitsong.auction.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Bitsong_Auction_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the Auction Msg service
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Bitsong_Auction_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Bitsong_Auction_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// OpenAuction defines a method for opening an auction
  func openAuction(request: Bitsong_Auction_V1beta1_MsgOpenAuction, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgOpenAuctionResponse>

  /// EditAuction defines a method for editting an auction
  func editAuction(request: Bitsong_Auction_V1beta1_MsgEditAuction, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgEditAuctionResponse>

  /// CancelAuction defines a method for cancelling an auction
  func cancelAuction(request: Bitsong_Auction_V1beta1_MsgCancelAuction, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgCancelAuctionResponse>

  /// OpenBid defines a method for opening a bid for an auction
  func openBid(request: Bitsong_Auction_V1beta1_MsgOpenBid, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgOpenBidResponse>

  /// CancelBid defines a method for cancelling a bid for an auction
  func cancelBid(request: Bitsong_Auction_V1beta1_MsgCancelBid, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgCancelBidResponse>

  /// Withdraw defines a method for withdrawing nft for an auction winner
  func withdraw(request: Bitsong_Auction_V1beta1_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Bitsong_Auction_V1beta1_MsgWithdrawResponse>
}

extension Bitsong_Auction_V1beta1_MsgProvider {
  internal var serviceName: Substring { return "bitsong.auction.v1beta1.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "OpenAuction":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgOpenAuction>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgOpenAuctionResponse>(),
        interceptors: self.interceptors?.makeOpenAuctionInterceptors() ?? [],
        userFunction: self.openAuction(request:context:)
      )

    case "EditAuction":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgEditAuction>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgEditAuctionResponse>(),
        interceptors: self.interceptors?.makeEditAuctionInterceptors() ?? [],
        userFunction: self.editAuction(request:context:)
      )

    case "CancelAuction":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgCancelAuction>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgCancelAuctionResponse>(),
        interceptors: self.interceptors?.makeCancelAuctionInterceptors() ?? [],
        userFunction: self.cancelAuction(request:context:)
      )

    case "OpenBid":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgOpenBid>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgOpenBidResponse>(),
        interceptors: self.interceptors?.makeOpenBidInterceptors() ?? [],
        userFunction: self.openBid(request:context:)
      )

    case "CancelBid":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgCancelBid>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgCancelBidResponse>(),
        interceptors: self.interceptors?.makeCancelBidInterceptors() ?? [],
        userFunction: self.cancelBid(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Bitsong_Auction_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Bitsong_Auction_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Bitsong_Auction_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'openAuction'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeOpenAuctionInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgOpenAuction, Bitsong_Auction_V1beta1_MsgOpenAuctionResponse>]

  /// - Returns: Interceptors to use when handling 'editAuction'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEditAuctionInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgEditAuction, Bitsong_Auction_V1beta1_MsgEditAuctionResponse>]

  /// - Returns: Interceptors to use when handling 'cancelAuction'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelAuctionInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgCancelAuction, Bitsong_Auction_V1beta1_MsgCancelAuctionResponse>]

  /// - Returns: Interceptors to use when handling 'openBid'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeOpenBidInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgOpenBid, Bitsong_Auction_V1beta1_MsgOpenBidResponse>]

  /// - Returns: Interceptors to use when handling 'cancelBid'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelBidInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgCancelBid, Bitsong_Auction_V1beta1_MsgCancelBidResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Bitsong_Auction_V1beta1_MsgWithdraw, Bitsong_Auction_V1beta1_MsgWithdrawResponse>]
}
