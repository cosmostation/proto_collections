//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ixo/payments/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the payments Msg service.
///
/// Usage: instantiate `Payments_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Payments_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Payments_MsgClientInterceptorFactoryProtocol? { get }

  func setPaymentContractAuthorisation(
    _ request: Payments_MsgSetPaymentContractAuthorisation,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgSetPaymentContractAuthorisation, Payments_MsgSetPaymentContractAuthorisationResponse>

  func createPaymentTemplate(
    _ request: Payments_MsgCreatePaymentTemplate,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgCreatePaymentTemplate, Payments_MsgCreatePaymentTemplateResponse>

  func createPaymentContract(
    _ request: Payments_MsgCreatePaymentContract,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgCreatePaymentContract, Payments_MsgCreatePaymentContractResponse>

  func createSubscription(
    _ request: Payments_MsgCreateSubscription,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgCreateSubscription, Payments_MsgCreateSubscriptionResponse>

  func grantDiscount(
    _ request: Payments_MsgGrantDiscount,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgGrantDiscount, Payments_MsgGrantDiscountResponse>

  func revokeDiscount(
    _ request: Payments_MsgRevokeDiscount,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgRevokeDiscount, Payments_MsgRevokeDiscountResponse>

  func effectPayment(
    _ request: Payments_MsgEffectPayment,
    callOptions: CallOptions?
  ) -> UnaryCall<Payments_MsgEffectPayment, Payments_MsgEffectPaymentResponse>
}

extension Payments_MsgClientProtocol {
  internal var serviceName: String {
    return "payments.Msg"
  }

  /// SetPaymentContractAuthorisation defines a method for authorising or deauthorising a payment contract.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetPaymentContractAuthorisation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setPaymentContractAuthorisation(
    _ request: Payments_MsgSetPaymentContractAuthorisation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgSetPaymentContractAuthorisation, Payments_MsgSetPaymentContractAuthorisationResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/SetPaymentContractAuthorisation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPaymentContractAuthorisationInterceptors() ?? []
    )
  }

  /// CreatePaymentTemplate defines a method for creating a payment template.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePaymentTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createPaymentTemplate(
    _ request: Payments_MsgCreatePaymentTemplate,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgCreatePaymentTemplate, Payments_MsgCreatePaymentTemplateResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/CreatePaymentTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePaymentTemplateInterceptors() ?? []
    )
  }

  /// CreatePaymentContract defines a method for creating a payment contract.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePaymentContract.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createPaymentContract(
    _ request: Payments_MsgCreatePaymentContract,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgCreatePaymentContract, Payments_MsgCreatePaymentContractResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/CreatePaymentContract",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreatePaymentContractInterceptors() ?? []
    )
  }

  /// CreateSubscription defines a method for creating a subscription.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSubscription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSubscription(
    _ request: Payments_MsgCreateSubscription,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgCreateSubscription, Payments_MsgCreateSubscriptionResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/CreateSubscription",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSubscriptionInterceptors() ?? []
    )
  }

  /// GrantDiscount defines a method for granting a discount to a payer on a specific payment contract.
  ///
  /// - Parameters:
  ///   - request: Request to send to GrantDiscount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func grantDiscount(
    _ request: Payments_MsgGrantDiscount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgGrantDiscount, Payments_MsgGrantDiscountResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/GrantDiscount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGrantDiscountInterceptors() ?? []
    )
  }

  /// RevokeDiscount defines a method for revoking a discount previously granted to a payer.
  ///
  /// - Parameters:
  ///   - request: Request to send to RevokeDiscount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func revokeDiscount(
    _ request: Payments_MsgRevokeDiscount,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgRevokeDiscount, Payments_MsgRevokeDiscountResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/RevokeDiscount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeDiscountInterceptors() ?? []
    )
  }

  /// EffectPayment defines a method for putting a specific payment contract into effect.
  ///
  /// - Parameters:
  ///   - request: Request to send to EffectPayment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func effectPayment(
    _ request: Payments_MsgEffectPayment,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Payments_MsgEffectPayment, Payments_MsgEffectPaymentResponse> {
    return self.makeUnaryCall(
      path: "/payments.Msg/EffectPayment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEffectPaymentInterceptors() ?? []
    )
  }
}

internal protocol Payments_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'setPaymentContractAuthorisation'.
  func makeSetPaymentContractAuthorisationInterceptors() -> [ClientInterceptor<Payments_MsgSetPaymentContractAuthorisation, Payments_MsgSetPaymentContractAuthorisationResponse>]

  /// - Returns: Interceptors to use when invoking 'createPaymentTemplate'.
  func makeCreatePaymentTemplateInterceptors() -> [ClientInterceptor<Payments_MsgCreatePaymentTemplate, Payments_MsgCreatePaymentTemplateResponse>]

  /// - Returns: Interceptors to use when invoking 'createPaymentContract'.
  func makeCreatePaymentContractInterceptors() -> [ClientInterceptor<Payments_MsgCreatePaymentContract, Payments_MsgCreatePaymentContractResponse>]

  /// - Returns: Interceptors to use when invoking 'createSubscription'.
  func makeCreateSubscriptionInterceptors() -> [ClientInterceptor<Payments_MsgCreateSubscription, Payments_MsgCreateSubscriptionResponse>]

  /// - Returns: Interceptors to use when invoking 'grantDiscount'.
  func makeGrantDiscountInterceptors() -> [ClientInterceptor<Payments_MsgGrantDiscount, Payments_MsgGrantDiscountResponse>]

  /// - Returns: Interceptors to use when invoking 'revokeDiscount'.
  func makeRevokeDiscountInterceptors() -> [ClientInterceptor<Payments_MsgRevokeDiscount, Payments_MsgRevokeDiscountResponse>]

  /// - Returns: Interceptors to use when invoking 'effectPayment'.
  func makeEffectPaymentInterceptors() -> [ClientInterceptor<Payments_MsgEffectPayment, Payments_MsgEffectPaymentResponse>]
}

internal final class Payments_MsgClient: Payments_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Payments_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the payments.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Payments_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the payments Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Payments_MsgProvider: CallHandlerProvider {
  var interceptors: Payments_MsgServerInterceptorFactoryProtocol? { get }

  /// SetPaymentContractAuthorisation defines a method for authorising or deauthorising a payment contract.
  func setPaymentContractAuthorisation(request: Payments_MsgSetPaymentContractAuthorisation, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgSetPaymentContractAuthorisationResponse>

  /// CreatePaymentTemplate defines a method for creating a payment template.
  func createPaymentTemplate(request: Payments_MsgCreatePaymentTemplate, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgCreatePaymentTemplateResponse>

  /// CreatePaymentContract defines a method for creating a payment contract.
  func createPaymentContract(request: Payments_MsgCreatePaymentContract, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgCreatePaymentContractResponse>

  /// CreateSubscription defines a method for creating a subscription.
  func createSubscription(request: Payments_MsgCreateSubscription, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgCreateSubscriptionResponse>

  /// GrantDiscount defines a method for granting a discount to a payer on a specific payment contract.
  func grantDiscount(request: Payments_MsgGrantDiscount, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgGrantDiscountResponse>

  /// RevokeDiscount defines a method for revoking a discount previously granted to a payer.
  func revokeDiscount(request: Payments_MsgRevokeDiscount, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgRevokeDiscountResponse>

  /// EffectPayment defines a method for putting a specific payment contract into effect.
  func effectPayment(request: Payments_MsgEffectPayment, context: StatusOnlyCallContext) -> EventLoopFuture<Payments_MsgEffectPaymentResponse>
}

extension Payments_MsgProvider {
  internal var serviceName: Substring { return "payments.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "SetPaymentContractAuthorisation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgSetPaymentContractAuthorisation>(),
        responseSerializer: ProtobufSerializer<Payments_MsgSetPaymentContractAuthorisationResponse>(),
        interceptors: self.interceptors?.makeSetPaymentContractAuthorisationInterceptors() ?? [],
        userFunction: self.setPaymentContractAuthorisation(request:context:)
      )

    case "CreatePaymentTemplate":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgCreatePaymentTemplate>(),
        responseSerializer: ProtobufSerializer<Payments_MsgCreatePaymentTemplateResponse>(),
        interceptors: self.interceptors?.makeCreatePaymentTemplateInterceptors() ?? [],
        userFunction: self.createPaymentTemplate(request:context:)
      )

    case "CreatePaymentContract":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgCreatePaymentContract>(),
        responseSerializer: ProtobufSerializer<Payments_MsgCreatePaymentContractResponse>(),
        interceptors: self.interceptors?.makeCreatePaymentContractInterceptors() ?? [],
        userFunction: self.createPaymentContract(request:context:)
      )

    case "CreateSubscription":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgCreateSubscription>(),
        responseSerializer: ProtobufSerializer<Payments_MsgCreateSubscriptionResponse>(),
        interceptors: self.interceptors?.makeCreateSubscriptionInterceptors() ?? [],
        userFunction: self.createSubscription(request:context:)
      )

    case "GrantDiscount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgGrantDiscount>(),
        responseSerializer: ProtobufSerializer<Payments_MsgGrantDiscountResponse>(),
        interceptors: self.interceptors?.makeGrantDiscountInterceptors() ?? [],
        userFunction: self.grantDiscount(request:context:)
      )

    case "RevokeDiscount":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgRevokeDiscount>(),
        responseSerializer: ProtobufSerializer<Payments_MsgRevokeDiscountResponse>(),
        interceptors: self.interceptors?.makeRevokeDiscountInterceptors() ?? [],
        userFunction: self.revokeDiscount(request:context:)
      )

    case "EffectPayment":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Payments_MsgEffectPayment>(),
        responseSerializer: ProtobufSerializer<Payments_MsgEffectPaymentResponse>(),
        interceptors: self.interceptors?.makeEffectPaymentInterceptors() ?? [],
        userFunction: self.effectPayment(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Payments_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'setPaymentContractAuthorisation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetPaymentContractAuthorisationInterceptors() -> [ServerInterceptor<Payments_MsgSetPaymentContractAuthorisation, Payments_MsgSetPaymentContractAuthorisationResponse>]

  /// - Returns: Interceptors to use when handling 'createPaymentTemplate'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreatePaymentTemplateInterceptors() -> [ServerInterceptor<Payments_MsgCreatePaymentTemplate, Payments_MsgCreatePaymentTemplateResponse>]

  /// - Returns: Interceptors to use when handling 'createPaymentContract'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreatePaymentContractInterceptors() -> [ServerInterceptor<Payments_MsgCreatePaymentContract, Payments_MsgCreatePaymentContractResponse>]

  /// - Returns: Interceptors to use when handling 'createSubscription'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSubscriptionInterceptors() -> [ServerInterceptor<Payments_MsgCreateSubscription, Payments_MsgCreateSubscriptionResponse>]

  /// - Returns: Interceptors to use when handling 'grantDiscount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGrantDiscountInterceptors() -> [ServerInterceptor<Payments_MsgGrantDiscount, Payments_MsgGrantDiscountResponse>]

  /// - Returns: Interceptors to use when handling 'revokeDiscount'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRevokeDiscountInterceptors() -> [ServerInterceptor<Payments_MsgRevokeDiscount, Payments_MsgRevokeDiscountResponse>]

  /// - Returns: Interceptors to use when handling 'effectPayment'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeEffectPaymentInterceptors() -> [ServerInterceptor<Payments_MsgEffectPayment, Payments_MsgEffectPaymentResponse>]
}
