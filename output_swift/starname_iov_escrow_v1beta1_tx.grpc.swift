//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: starname/iov/escrow/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the escrow Msg service
///
/// Usage: instantiate `Starnamed_X_Escrow_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Starnamed_X_Escrow_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Starnamed_X_Escrow_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func createEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgCreateEscrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgCreateEscrow, Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse>

  func updateEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow, Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse>

  func transferToEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow, Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse>

  func refundEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgRefundEscrow,
    callOptions: CallOptions?
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgRefundEscrow, Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse>
}

extension Starnamed_X_Escrow_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "starnamed.x.escrow.v1beta1.Msg"
  }

  /// CreateEscrow defines a method for creating an escrow
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateEscrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgCreateEscrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgCreateEscrow, Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse> {
    return self.makeUnaryCall(
      path: "/starnamed.x.escrow.v1beta1.Msg/CreateEscrow",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateEscrowInterceptors() ?? []
    )
  }

  /// UpdateEscrow defines a method for updating an escrow
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateEscrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow, Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse> {
    return self.makeUnaryCall(
      path: "/starnamed.x.escrow.v1beta1.Msg/UpdateEscrow",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateEscrowInterceptors() ?? []
    )
  }

  /// TransferToEscrow defines a method for a buyer to transfer funds to the escrow
  ///
  /// - Parameters:
  ///   - request: Request to send to TransferToEscrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func transferToEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow, Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse> {
    return self.makeUnaryCall(
      path: "/starnamed.x.escrow.v1beta1.Msg/TransferToEscrow",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeTransferToEscrowInterceptors() ?? []
    )
  }

  /// RefundEscrow defines a method for the seller to return the assets locked in the escrow
  ///
  /// - Parameters:
  ///   - request: Request to send to RefundEscrow.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func refundEscrow(
    _ request: Starnamed_X_Escrow_V1beta1_MsgRefundEscrow,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Starnamed_X_Escrow_V1beta1_MsgRefundEscrow, Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse> {
    return self.makeUnaryCall(
      path: "/starnamed.x.escrow.v1beta1.Msg/RefundEscrow",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRefundEscrowInterceptors() ?? []
    )
  }
}

internal protocol Starnamed_X_Escrow_V1beta1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'createEscrow'.
  func makeCreateEscrowInterceptors() -> [ClientInterceptor<Starnamed_X_Escrow_V1beta1_MsgCreateEscrow, Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse>]

  /// - Returns: Interceptors to use when invoking 'updateEscrow'.
  func makeUpdateEscrowInterceptors() -> [ClientInterceptor<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow, Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse>]

  /// - Returns: Interceptors to use when invoking 'transferToEscrow'.
  func makeTransferToEscrowInterceptors() -> [ClientInterceptor<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow, Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse>]

  /// - Returns: Interceptors to use when invoking 'refundEscrow'.
  func makeRefundEscrowInterceptors() -> [ClientInterceptor<Starnamed_X_Escrow_V1beta1_MsgRefundEscrow, Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse>]
}

internal final class Starnamed_X_Escrow_V1beta1_MsgClient: Starnamed_X_Escrow_V1beta1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Starnamed_X_Escrow_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the starnamed.x.escrow.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Starnamed_X_Escrow_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the escrow Msg service
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Starnamed_X_Escrow_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Starnamed_X_Escrow_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// CreateEscrow defines a method for creating an escrow
  func createEscrow(request: Starnamed_X_Escrow_V1beta1_MsgCreateEscrow, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse>

  /// UpdateEscrow defines a method for updating an escrow
  func updateEscrow(request: Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse>

  /// TransferToEscrow defines a method for a buyer to transfer funds to the escrow
  func transferToEscrow(request: Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse>

  /// RefundEscrow defines a method for the seller to return the assets locked in the escrow
  func refundEscrow(request: Starnamed_X_Escrow_V1beta1_MsgRefundEscrow, context: StatusOnlyCallContext) -> EventLoopFuture<Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse>
}

extension Starnamed_X_Escrow_V1beta1_MsgProvider {
  internal var serviceName: Substring { return "starnamed.x.escrow.v1beta1.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "CreateEscrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Escrow_V1beta1_MsgCreateEscrow>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse>(),
        interceptors: self.interceptors?.makeCreateEscrowInterceptors() ?? [],
        userFunction: self.createEscrow(request:context:)
      )

    case "UpdateEscrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse>(),
        interceptors: self.interceptors?.makeUpdateEscrowInterceptors() ?? [],
        userFunction: self.updateEscrow(request:context:)
      )

    case "TransferToEscrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse>(),
        interceptors: self.interceptors?.makeTransferToEscrowInterceptors() ?? [],
        userFunction: self.transferToEscrow(request:context:)
      )

    case "RefundEscrow":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Starnamed_X_Escrow_V1beta1_MsgRefundEscrow>(),
        responseSerializer: ProtobufSerializer<Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse>(),
        interceptors: self.interceptors?.makeRefundEscrowInterceptors() ?? [],
        userFunction: self.refundEscrow(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Starnamed_X_Escrow_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'createEscrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateEscrowInterceptors() -> [ServerInterceptor<Starnamed_X_Escrow_V1beta1_MsgCreateEscrow, Starnamed_X_Escrow_V1beta1_MsgCreateEscrowResponse>]

  /// - Returns: Interceptors to use when handling 'updateEscrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateEscrowInterceptors() -> [ServerInterceptor<Starnamed_X_Escrow_V1beta1_MsgUpdateEscrow, Starnamed_X_Escrow_V1beta1_MsgUpdateEscrowResponse>]

  /// - Returns: Interceptors to use when handling 'transferToEscrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeTransferToEscrowInterceptors() -> [ServerInterceptor<Starnamed_X_Escrow_V1beta1_MsgTransferToEscrow, Starnamed_X_Escrow_V1beta1_MsgTransferToEscrowResponse>]

  /// - Returns: Interceptors to use when handling 'refundEscrow'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRefundEscrowInterceptors() -> [ServerInterceptor<Starnamed_X_Escrow_V1beta1_MsgRefundEscrow, Starnamed_X_Escrow_V1beta1_MsgRefundEscrowResponse>]
}
