// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: starname/iov/configuration/v1beta1/msgs.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// MsgUpdateConfig is used to update starname configuration
struct Starnamed_X_Configuration_V1beta1_MsgUpdateConfig {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Signer is the address of the entity who is doing the transaction
  var signer: String = String()

  /// NewConfiguration contains the new configuration data
  var newConfiguration: Starnamed_X_Configuration_V1beta1_Config {
    get {return _newConfiguration ?? Starnamed_X_Configuration_V1beta1_Config()}
    set {_newConfiguration = newValue}
  }
  /// Returns true if `newConfiguration` has been explicitly set.
  var hasNewConfiguration: Bool {return self._newConfiguration != nil}
  /// Clears the value of `newConfiguration`. Subsequent reads from it will return its default value.
  mutating func clearNewConfiguration() {self._newConfiguration = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _newConfiguration: Starnamed_X_Configuration_V1beta1_Config? = nil
}

/// MsgUpdateFees is used to update the starname product fees in the starname module.
struct Starnamed_X_Configuration_V1beta1_MsgUpdateFees {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var fees: Starnamed_X_Configuration_V1beta1_Fees {
    get {return _fees ?? Starnamed_X_Configuration_V1beta1_Fees()}
    set {_fees = newValue}
  }
  /// Returns true if `fees` has been explicitly set.
  var hasFees: Bool {return self._fees != nil}
  /// Clears the value of `fees`. Subsequent reads from it will return its default value.
  mutating func clearFees() {self._fees = nil}

  var configurer: String = String()

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _fees: Starnamed_X_Configuration_V1beta1_Fees? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "starnamed.x.configuration.v1beta1"

extension Starnamed_X_Configuration_V1beta1_MsgUpdateConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateConfig"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "signer"),
    2: .standard(proto: "new_configuration"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.signer) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._newConfiguration) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.signer.isEmpty {
      try visitor.visitSingularStringField(value: self.signer, fieldNumber: 1)
    }
    if let v = self._newConfiguration {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Starnamed_X_Configuration_V1beta1_MsgUpdateConfig, rhs: Starnamed_X_Configuration_V1beta1_MsgUpdateConfig) -> Bool {
    if lhs.signer != rhs.signer {return false}
    if lhs._newConfiguration != rhs._newConfiguration {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Starnamed_X_Configuration_V1beta1_MsgUpdateFees: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".MsgUpdateFees"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "fees"),
    2: .same(proto: "configurer"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._fees) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.configurer) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._fees {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if !self.configurer.isEmpty {
      try visitor.visitSingularStringField(value: self.configurer, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Starnamed_X_Configuration_V1beta1_MsgUpdateFees, rhs: Starnamed_X_Configuration_V1beta1_MsgUpdateFees) -> Bool {
    if lhs._fees != rhs._fees {return false}
    if lhs.configurer != rhs.configurer {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
