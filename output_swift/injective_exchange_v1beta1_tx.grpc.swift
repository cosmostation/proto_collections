//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: injective/exchange/v1beta1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Msg defines the staking Msg service.
///
/// Usage: instantiate `Injective_Exchange_V1beta1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Injective_Exchange_V1beta1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? { get }

  func deposit(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>

  func withdraw(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>

  func instantSpotMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>

  func instantPerpetualMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>

  func instantExpiryFuturesMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>

  func createSpotLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>

  func batchCreateSpotLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>

  func createSpotMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>

  func cancelSpotOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>

  func batchCancelSpotOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>

  func createDerivativeLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>

  func batchCreateDerivativeLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>

  func createDerivativeMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>

  func cancelDerivativeOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>

  func batchCancelDerivativeOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>

  func subaccountTransfer(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>

  func externalTransfer(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>

  func liquidatePosition(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>

  func increasePositionMargin(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions?
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>
}

extension Injective_Exchange_V1beta1_MsgClientProtocol {
  internal var serviceName: String {
    return "injective.exchange.v1beta1.Msg"
  }

  /// Deposit defines a method for transferring coins from the sender's bank balance into the subaccount's exchange deposits
  ///
  /// - Parameters:
  ///   - request: Request to send to Deposit.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deposit(
    _ request: Injective_Exchange_V1beta1_MsgDeposit,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/Deposit",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDepositInterceptors() ?? []
    )
  }

  /// Withdraw defines a method for withdrawing coins from a subaccount's deposits to the user's bank balance
  ///
  /// - Parameters:
  ///   - request: Request to send to Withdraw.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func withdraw(
    _ request: Injective_Exchange_V1beta1_MsgWithdraw,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/Withdraw",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeWithdrawInterceptors() ?? []
    )
  }

  /// InstantSpotMarketLaunch defines method for creating a spot market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantSpotMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantSpotMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/InstantSpotMarketLaunch",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? []
    )
  }

  /// InstantPerpetualMarketLaunch defines a method for creating a new perpetual futures market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantPerpetualMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantPerpetualMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/InstantPerpetualMarketLaunch",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? []
    )
  }

  /// InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry futures market by paying listing fee without governance
  ///
  /// - Parameters:
  ///   - request: Request to send to InstantExpiryFuturesMarketLaunch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func instantExpiryFuturesMarketLaunch(
    _ request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/InstantExpiryFuturesMarketLaunch",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? []
    )
  }

  /// CreateSpotLimitOrder defines a method for creating a new spot limit order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSpotLimitOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSpotLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CreateSpotLimitOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? []
    )
  }

  /// BatchCreateSpotLimitOrder defines a method for creating a new batch of spot limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateSpotLimitOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCreateSpotLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/BatchCreateSpotLimitOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? []
    )
  }

  /// CreateSpotMarketOrder defines a method for creating a new spot market order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSpotMarketOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createSpotMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CreateSpotMarketOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? []
    )
  }

  /// MsgCancelSpotOrder defines a method for cancelling a spot order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelSpotOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelSpotOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelSpotOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CancelSpotOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? []
    )
  }

  /// BatchCancelSpotOrders defines a method for cancelling a batch of spot orders in a given market.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCancelSpotOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCancelSpotOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/BatchCancelSpotOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? []
    )
  }

  /// CreateDerivativeLimitOrder defines a method for creating a new derivative limit order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDerivativeLimitOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDerivativeLimitOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeLimitOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? []
    )
  }

  /// BatchCreateDerivativeLimitOrders defines a method for creating a new batch of derivative limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCreateDerivativeLimitOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCreateDerivativeLimitOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/BatchCreateDerivativeLimitOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? []
    )
  }

  /// MsgCreateDerivativeLimitOrder defines a method for creating a new derivative market order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDerivativeMarketOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createDerivativeMarketOrder(
    _ request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CreateDerivativeMarketOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? []
    )
  }

  /// MsgCancelDerivativeOrder defines a method for cancelling a derivative order.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelDerivativeOrder.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelDerivativeOrder(
    _ request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/CancelDerivativeOrder",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? []
    )
  }

  /// MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of derivative limit orders.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchCancelDerivativeOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func batchCancelDerivativeOrders(
    _ request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/BatchCancelDerivativeOrders",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? []
    )
  }

  /// SubaccountTransfer defines a method for transfer between subaccounts
  ///
  /// - Parameters:
  ///   - request: Request to send to SubaccountTransfer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func subaccountTransfer(
    _ request: Injective_Exchange_V1beta1_MsgSubaccountTransfer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/SubaccountTransfer",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? []
    )
  }

  /// ExternalTransfer defines a method for transfer between external accounts
  ///
  /// - Parameters:
  ///   - request: Request to send to ExternalTransfer.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func externalTransfer(
    _ request: Injective_Exchange_V1beta1_MsgExternalTransfer,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/ExternalTransfer",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? []
    )
  }

  /// LiquidatePosition defines a method for liquidating a position
  ///
  /// - Parameters:
  ///   - request: Request to send to LiquidatePosition.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func liquidatePosition(
    _ request: Injective_Exchange_V1beta1_MsgLiquidatePosition,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/LiquidatePosition",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? []
    )
  }

  /// IncreasePositionMargin defines a method for increasing margin of a position
  ///
  /// - Parameters:
  ///   - request: Request to send to IncreasePositionMargin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func increasePositionMargin(
    _ request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse> {
    return self.makeUnaryCall(
      path: "/injective.exchange.v1beta1.Msg/IncreasePositionMargin",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? []
    )
  }
}

internal protocol Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'deposit'.
  func makeDepositInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when invoking 'withdraw'.
  func makeWithdrawInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when invoking 'instantSpotMarketLaunch'.
  func makeInstantSpotMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'instantPerpetualMarketLaunch'.
  func makeInstantPerpetualMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'instantExpiryFuturesMarketLaunch'.
  func makeInstantExpiryFuturesMarketLaunchInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>]

  /// - Returns: Interceptors to use when invoking 'createSpotLimitOrder'.
  func makeCreateSpotLimitOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCreateSpotLimitOrders'.
  func makeBatchCreateSpotLimitOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'createSpotMarketOrder'.
  func makeCreateSpotMarketOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelSpotOrder'.
  func makeCancelSpotOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCancelSpotOrders'.
  func makeBatchCancelSpotOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'createDerivativeLimitOrder'.
  func makeCreateDerivativeLimitOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCreateDerivativeLimitOrders'.
  func makeBatchCreateDerivativeLimitOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'createDerivativeMarketOrder'.
  func makeCreateDerivativeMarketOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'cancelDerivativeOrder'.
  func makeCancelDerivativeOrderInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>]

  /// - Returns: Interceptors to use when invoking 'batchCancelDerivativeOrders'.
  func makeBatchCancelDerivativeOrdersInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'subaccountTransfer'.
  func makeSubaccountTransferInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>]

  /// - Returns: Interceptors to use when invoking 'externalTransfer'.
  func makeExternalTransferInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>]

  /// - Returns: Interceptors to use when invoking 'liquidatePosition'.
  func makeLiquidatePositionInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>]

  /// - Returns: Interceptors to use when invoking 'increasePositionMargin'.
  func makeIncreasePositionMarginInterceptors() -> [ClientInterceptor<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>]
}

internal final class Injective_Exchange_V1beta1_MsgClient: Injective_Exchange_V1beta1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the injective.exchange.v1beta1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Injective_Exchange_V1beta1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Msg defines the staking Msg service.
///
/// To build a server, implement a class that conforms to this protocol.
internal protocol Injective_Exchange_V1beta1_MsgProvider: CallHandlerProvider {
  var interceptors: Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol? { get }

  /// Deposit defines a method for transferring coins from the sender's bank balance into the subaccount's exchange deposits
  func deposit(request: Injective_Exchange_V1beta1_MsgDeposit, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgDepositResponse>

  /// Withdraw defines a method for withdrawing coins from a subaccount's deposits to the user's bank balance
  func withdraw(request: Injective_Exchange_V1beta1_MsgWithdraw, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgWithdrawResponse>

  /// InstantSpotMarketLaunch defines method for creating a spot market by paying listing fee without governance
  func instantSpotMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>

  /// InstantPerpetualMarketLaunch defines a method for creating a new perpetual futures market by paying listing fee without governance
  func instantPerpetualMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>

  /// InstantExpiryFuturesMarketLaunch defines a method for creating a new expiry futures market by paying listing fee without governance
  func instantExpiryFuturesMarketLaunch(request: Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>

  /// CreateSpotLimitOrder defines a method for creating a new spot limit order.
  func createSpotLimitOrder(request: Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>

  /// BatchCreateSpotLimitOrder defines a method for creating a new batch of spot limit orders.
  func batchCreateSpotLimitOrders(request: Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>

  /// CreateSpotMarketOrder defines a method for creating a new spot market order.
  func createSpotMarketOrder(request: Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>

  /// MsgCancelSpotOrder defines a method for cancelling a spot order.
  func cancelSpotOrder(request: Injective_Exchange_V1beta1_MsgCancelSpotOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>

  /// BatchCancelSpotOrders defines a method for cancelling a batch of spot orders in a given market.
  func batchCancelSpotOrders(request: Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>

  /// CreateDerivativeLimitOrder defines a method for creating a new derivative limit order.
  func createDerivativeLimitOrder(request: Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>

  /// BatchCreateDerivativeLimitOrders defines a method for creating a new batch of derivative limit orders.
  func batchCreateDerivativeLimitOrders(request: Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>

  /// MsgCreateDerivativeLimitOrder defines a method for creating a new derivative market order.
  func createDerivativeMarketOrder(request: Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>

  /// MsgCancelDerivativeOrder defines a method for cancelling a derivative order.
  func cancelDerivativeOrder(request: Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>

  /// MsgBatchCancelDerivativeOrders defines a method for cancelling a batch of derivative limit orders.
  func batchCancelDerivativeOrders(request: Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>

  /// SubaccountTransfer defines a method for transfer between subaccounts
  func subaccountTransfer(request: Injective_Exchange_V1beta1_MsgSubaccountTransfer, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>

  /// ExternalTransfer defines a method for transfer between external accounts
  func externalTransfer(request: Injective_Exchange_V1beta1_MsgExternalTransfer, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgExternalTransferResponse>

  /// LiquidatePosition defines a method for liquidating a position
  func liquidatePosition(request: Injective_Exchange_V1beta1_MsgLiquidatePosition, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>

  /// IncreasePositionMargin defines a method for increasing margin of a position
  func increasePositionMargin(request: Injective_Exchange_V1beta1_MsgIncreasePositionMargin, context: StatusOnlyCallContext) -> EventLoopFuture<Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>
}

extension Injective_Exchange_V1beta1_MsgProvider {
  internal var serviceName: Substring { return "injective.exchange.v1beta1.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Deposit":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgDeposit>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgDepositResponse>(),
        interceptors: self.interceptors?.makeDepositInterceptors() ?? [],
        userFunction: self.deposit(request:context:)
      )

    case "Withdraw":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgWithdraw>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgWithdrawResponse>(),
        interceptors: self.interceptors?.makeWithdrawInterceptors() ?? [],
        userFunction: self.withdraw(request:context:)
      )

    case "InstantSpotMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantSpotMarketLaunchInterceptors() ?? [],
        userFunction: self.instantSpotMarketLaunch(request:context:)
      )

    case "InstantPerpetualMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantPerpetualMarketLaunchInterceptors() ?? [],
        userFunction: self.instantPerpetualMarketLaunch(request:context:)
      )

    case "InstantExpiryFuturesMarketLaunch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>(),
        interceptors: self.interceptors?.makeInstantExpiryFuturesMarketLaunchInterceptors() ?? [],
        userFunction: self.instantExpiryFuturesMarketLaunch(request:context:)
      )

    case "CreateSpotLimitOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotLimitOrderInterceptors() ?? [],
        userFunction: self.createSpotLimitOrder(request:context:)
      )

    case "BatchCreateSpotLimitOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateSpotLimitOrdersInterceptors() ?? [],
        userFunction: self.batchCreateSpotLimitOrders(request:context:)
      )

    case "CreateSpotMarketOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateSpotMarketOrderInterceptors() ?? [],
        userFunction: self.createSpotMarketOrder(request:context:)
      )

    case "CancelSpotOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelSpotOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>(),
        interceptors: self.interceptors?.makeCancelSpotOrderInterceptors() ?? [],
        userFunction: self.cancelSpotOrder(request:context:)
      )

    case "BatchCancelSpotOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelSpotOrdersInterceptors() ?? [],
        userFunction: self.batchCancelSpotOrders(request:context:)
      )

    case "CreateDerivativeLimitOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeLimitOrderInterceptors() ?? [],
        userFunction: self.createDerivativeLimitOrder(request:context:)
      )

    case "BatchCreateDerivativeLimitOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCreateDerivativeLimitOrdersInterceptors() ?? [],
        userFunction: self.batchCreateDerivativeLimitOrders(request:context:)
      )

    case "CreateDerivativeMarketOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>(),
        interceptors: self.interceptors?.makeCreateDerivativeMarketOrderInterceptors() ?? [],
        userFunction: self.createDerivativeMarketOrder(request:context:)
      )

    case "CancelDerivativeOrder":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>(),
        interceptors: self.interceptors?.makeCancelDerivativeOrderInterceptors() ?? [],
        userFunction: self.cancelDerivativeOrder(request:context:)
      )

    case "BatchCancelDerivativeOrders":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>(),
        interceptors: self.interceptors?.makeBatchCancelDerivativeOrdersInterceptors() ?? [],
        userFunction: self.batchCancelDerivativeOrders(request:context:)
      )

    case "SubaccountTransfer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgSubaccountTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>(),
        interceptors: self.interceptors?.makeSubaccountTransferInterceptors() ?? [],
        userFunction: self.subaccountTransfer(request:context:)
      )

    case "ExternalTransfer":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgExternalTransfer>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgExternalTransferResponse>(),
        interceptors: self.interceptors?.makeExternalTransferInterceptors() ?? [],
        userFunction: self.externalTransfer(request:context:)
      )

    case "LiquidatePosition":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgLiquidatePosition>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>(),
        interceptors: self.interceptors?.makeLiquidatePositionInterceptors() ?? [],
        userFunction: self.liquidatePosition(request:context:)
      )

    case "IncreasePositionMargin":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Injective_Exchange_V1beta1_MsgIncreasePositionMargin>(),
        responseSerializer: ProtobufSerializer<Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>(),
        interceptors: self.interceptors?.makeIncreasePositionMarginInterceptors() ?? [],
        userFunction: self.increasePositionMargin(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Injective_Exchange_V1beta1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'deposit'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDepositInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgDeposit, Injective_Exchange_V1beta1_MsgDepositResponse>]

  /// - Returns: Interceptors to use when handling 'withdraw'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeWithdrawInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgWithdraw, Injective_Exchange_V1beta1_MsgWithdrawResponse>]

  /// - Returns: Interceptors to use when handling 'instantSpotMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantSpotMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunch, Injective_Exchange_V1beta1_MsgInstantSpotMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'instantPerpetualMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantPerpetualMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunch, Injective_Exchange_V1beta1_MsgInstantPerpetualMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'instantExpiryFuturesMarketLaunch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInstantExpiryFuturesMarketLaunchInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunch, Injective_Exchange_V1beta1_MsgInstantExpiryFuturesMarketLaunchResponse>]

  /// - Returns: Interceptors to use when handling 'createSpotLimitOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSpotLimitOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotLimitOrder, Injective_Exchange_V1beta1_MsgCreateSpotLimitOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCreateSpotLimitOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCreateSpotLimitOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateSpotLimitOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'createSpotMarketOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateSpotMarketOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateSpotMarketOrder, Injective_Exchange_V1beta1_MsgCreateSpotMarketOrderResponse>]

  /// - Returns: Interceptors to use when handling 'cancelSpotOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelSpotOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCancelSpotOrder, Injective_Exchange_V1beta1_MsgCancelSpotOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCancelSpotOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCancelSpotOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelSpotOrders, Injective_Exchange_V1beta1_MsgBatchCancelSpotOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'createDerivativeLimitOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateDerivativeLimitOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeLimitOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCreateDerivativeLimitOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCreateDerivativeLimitOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrders, Injective_Exchange_V1beta1_MsgBatchCreateDerivativeLimitOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'createDerivativeMarketOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateDerivativeMarketOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrder, Injective_Exchange_V1beta1_MsgCreateDerivativeMarketOrderResponse>]

  /// - Returns: Interceptors to use when handling 'cancelDerivativeOrder'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelDerivativeOrderInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgCancelDerivativeOrder, Injective_Exchange_V1beta1_MsgCancelDerivativeOrderResponse>]

  /// - Returns: Interceptors to use when handling 'batchCancelDerivativeOrders'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBatchCancelDerivativeOrdersInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrders, Injective_Exchange_V1beta1_MsgBatchCancelDerivativeOrdersResponse>]

  /// - Returns: Interceptors to use when handling 'subaccountTransfer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSubaccountTransferInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgSubaccountTransfer, Injective_Exchange_V1beta1_MsgSubaccountTransferResponse>]

  /// - Returns: Interceptors to use when handling 'externalTransfer'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeExternalTransferInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgExternalTransfer, Injective_Exchange_V1beta1_MsgExternalTransferResponse>]

  /// - Returns: Interceptors to use when handling 'liquidatePosition'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLiquidatePositionInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgLiquidatePosition, Injective_Exchange_V1beta1_MsgLiquidatePositionResponse>]

  /// - Returns: Interceptors to use when handling 'increasePositionMargin'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeIncreasePositionMarginInterceptors() -> [ServerInterceptor<Injective_Exchange_V1beta1_MsgIncreasePositionMargin, Injective_Exchange_V1beta1_MsgIncreasePositionMarginResponse>]
}
