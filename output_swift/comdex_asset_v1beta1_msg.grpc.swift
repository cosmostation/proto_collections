//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/asset/v1beta1/msg.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `Comdex_Asset_V1beta1_MsgServiceClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Asset_V1beta1_MsgServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Asset_V1beta1_MsgServiceClientInterceptorFactoryProtocol? { get }

  func msgAddAsset(
    _ request: Comdex_Asset_V1beta1_MsgAddAssetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgAddAssetRequest, Comdex_Asset_V1beta1_MsgAddAssetResponse>

  func msgUpdateAsset(
    _ request: Comdex_Asset_V1beta1_MsgUpdateAssetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgUpdateAssetRequest, Comdex_Asset_V1beta1_MsgUpdateAssetResponse>

  func msgAddPair(
    _ request: Comdex_Asset_V1beta1_MsgAddPairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgAddPairRequest, Comdex_Asset_V1beta1_MsgAddPairResponse>

  func msgUpdatePair(
    _ request: Comdex_Asset_V1beta1_MsgUpdatePairRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgUpdatePairRequest, Comdex_Asset_V1beta1_MsgUpdatePairResponse>
}

extension Comdex_Asset_V1beta1_MsgServiceClientProtocol {
  internal var serviceName: String {
    return "comdex.asset.v1beta1.MsgService"
  }

  /// Unary call to MsgAddAsset
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgAddAsset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgAddAsset(
    _ request: Comdex_Asset_V1beta1_MsgAddAssetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgAddAssetRequest, Comdex_Asset_V1beta1_MsgAddAssetResponse> {
    return self.makeUnaryCall(
      path: "/comdex.asset.v1beta1.MsgService/MsgAddAsset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgAddAssetInterceptors() ?? []
    )
  }

  /// Unary call to MsgUpdateAsset
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgUpdateAsset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgUpdateAsset(
    _ request: Comdex_Asset_V1beta1_MsgUpdateAssetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgUpdateAssetRequest, Comdex_Asset_V1beta1_MsgUpdateAssetResponse> {
    return self.makeUnaryCall(
      path: "/comdex.asset.v1beta1.MsgService/MsgUpdateAsset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateAssetInterceptors() ?? []
    )
  }

  /// Unary call to MsgAddPair
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgAddPair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgAddPair(
    _ request: Comdex_Asset_V1beta1_MsgAddPairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgAddPairRequest, Comdex_Asset_V1beta1_MsgAddPairResponse> {
    return self.makeUnaryCall(
      path: "/comdex.asset.v1beta1.MsgService/MsgAddPair",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgAddPairInterceptors() ?? []
    )
  }

  /// Unary call to MsgUpdatePair
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgUpdatePair.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgUpdatePair(
    _ request: Comdex_Asset_V1beta1_MsgUpdatePairRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Asset_V1beta1_MsgUpdatePairRequest, Comdex_Asset_V1beta1_MsgUpdatePairResponse> {
    return self.makeUnaryCall(
      path: "/comdex.asset.v1beta1.MsgService/MsgUpdatePair",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdatePairInterceptors() ?? []
    )
  }
}

internal protocol Comdex_Asset_V1beta1_MsgServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'msgAddAsset'.
  func makeMsgAddAssetInterceptors() -> [ClientInterceptor<Comdex_Asset_V1beta1_MsgAddAssetRequest, Comdex_Asset_V1beta1_MsgAddAssetResponse>]

  /// - Returns: Interceptors to use when invoking 'msgUpdateAsset'.
  func makeMsgUpdateAssetInterceptors() -> [ClientInterceptor<Comdex_Asset_V1beta1_MsgUpdateAssetRequest, Comdex_Asset_V1beta1_MsgUpdateAssetResponse>]

  /// - Returns: Interceptors to use when invoking 'msgAddPair'.
  func makeMsgAddPairInterceptors() -> [ClientInterceptor<Comdex_Asset_V1beta1_MsgAddPairRequest, Comdex_Asset_V1beta1_MsgAddPairResponse>]

  /// - Returns: Interceptors to use when invoking 'msgUpdatePair'.
  func makeMsgUpdatePairInterceptors() -> [ClientInterceptor<Comdex_Asset_V1beta1_MsgUpdatePairRequest, Comdex_Asset_V1beta1_MsgUpdatePairResponse>]
}

internal final class Comdex_Asset_V1beta1_MsgServiceClient: Comdex_Asset_V1beta1_MsgServiceClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Asset_V1beta1_MsgServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.asset.v1beta1.MsgService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Asset_V1beta1_MsgServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Asset_V1beta1_MsgServiceProvider: CallHandlerProvider {
  var interceptors: Comdex_Asset_V1beta1_MsgServiceServerInterceptorFactoryProtocol? { get }

  func msgAddAsset(request: Comdex_Asset_V1beta1_MsgAddAssetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Asset_V1beta1_MsgAddAssetResponse>

  func msgUpdateAsset(request: Comdex_Asset_V1beta1_MsgUpdateAssetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Asset_V1beta1_MsgUpdateAssetResponse>

  func msgAddPair(request: Comdex_Asset_V1beta1_MsgAddPairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Asset_V1beta1_MsgAddPairResponse>

  func msgUpdatePair(request: Comdex_Asset_V1beta1_MsgUpdatePairRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Asset_V1beta1_MsgUpdatePairResponse>
}

extension Comdex_Asset_V1beta1_MsgServiceProvider {
  internal var serviceName: Substring { return "comdex.asset.v1beta1.MsgService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "MsgAddAsset":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Asset_V1beta1_MsgAddAssetRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Asset_V1beta1_MsgAddAssetResponse>(),
        interceptors: self.interceptors?.makeMsgAddAssetInterceptors() ?? [],
        userFunction: self.msgAddAsset(request:context:)
      )

    case "MsgUpdateAsset":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Asset_V1beta1_MsgUpdateAssetRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Asset_V1beta1_MsgUpdateAssetResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateAssetInterceptors() ?? [],
        userFunction: self.msgUpdateAsset(request:context:)
      )

    case "MsgAddPair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Asset_V1beta1_MsgAddPairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Asset_V1beta1_MsgAddPairResponse>(),
        interceptors: self.interceptors?.makeMsgAddPairInterceptors() ?? [],
        userFunction: self.msgAddPair(request:context:)
      )

    case "MsgUpdatePair":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Asset_V1beta1_MsgUpdatePairRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Asset_V1beta1_MsgUpdatePairResponse>(),
        interceptors: self.interceptors?.makeMsgUpdatePairInterceptors() ?? [],
        userFunction: self.msgUpdatePair(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Asset_V1beta1_MsgServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'msgAddAsset'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgAddAssetInterceptors() -> [ServerInterceptor<Comdex_Asset_V1beta1_MsgAddAssetRequest, Comdex_Asset_V1beta1_MsgAddAssetResponse>]

  /// - Returns: Interceptors to use when handling 'msgUpdateAsset'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgUpdateAssetInterceptors() -> [ServerInterceptor<Comdex_Asset_V1beta1_MsgUpdateAssetRequest, Comdex_Asset_V1beta1_MsgUpdateAssetResponse>]

  /// - Returns: Interceptors to use when handling 'msgAddPair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgAddPairInterceptors() -> [ServerInterceptor<Comdex_Asset_V1beta1_MsgAddPairRequest, Comdex_Asset_V1beta1_MsgAddPairResponse>]

  /// - Returns: Interceptors to use when handling 'msgUpdatePair'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgUpdatePairInterceptors() -> [ServerInterceptor<Comdex_Asset_V1beta1_MsgUpdatePairRequest, Comdex_Asset_V1beta1_MsgUpdatePairResponse>]
}
