//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: em/issuer/v1/tx.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `Em_Issuer_V1_MsgClient`, then call methods of this protocol to make API calls.
internal protocol Em_Issuer_V1_MsgClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Em_Issuer_V1_MsgClientInterceptorFactoryProtocol? { get }

  func increaseMintable(
    _ request: Em_Issuer_V1_MsgIncreaseMintable,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Issuer_V1_MsgIncreaseMintable, Em_Issuer_V1_MsgIncreaseMintableResponse>

  func decreaseMintable(
    _ request: Em_Issuer_V1_MsgDecreaseMintable,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Issuer_V1_MsgDecreaseMintable, Em_Issuer_V1_MsgDecreaseMintableResponse>

  func revokeLiquidityProvider(
    _ request: Em_Issuer_V1_MsgRevokeLiquidityProvider,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Issuer_V1_MsgRevokeLiquidityProvider, Em_Issuer_V1_MsgRevokeLiquidityProviderResponse>

  func setInflation(
    _ request: Em_Issuer_V1_MsgSetInflation,
    callOptions: CallOptions?
  ) -> UnaryCall<Em_Issuer_V1_MsgSetInflation, Em_Issuer_V1_MsgSetInflationResponse>
}

extension Em_Issuer_V1_MsgClientProtocol {
  internal var serviceName: String {
    return "em.issuer.v1.Msg"
  }

  /// Unary call to IncreaseMintable
  ///
  /// - Parameters:
  ///   - request: Request to send to IncreaseMintable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func increaseMintable(
    _ request: Em_Issuer_V1_MsgIncreaseMintable,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Issuer_V1_MsgIncreaseMintable, Em_Issuer_V1_MsgIncreaseMintableResponse> {
    return self.makeUnaryCall(
      path: "/em.issuer.v1.Msg/IncreaseMintable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIncreaseMintableInterceptors() ?? []
    )
  }

  /// Unary call to DecreaseMintable
  ///
  /// - Parameters:
  ///   - request: Request to send to DecreaseMintable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func decreaseMintable(
    _ request: Em_Issuer_V1_MsgDecreaseMintable,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Issuer_V1_MsgDecreaseMintable, Em_Issuer_V1_MsgDecreaseMintableResponse> {
    return self.makeUnaryCall(
      path: "/em.issuer.v1.Msg/DecreaseMintable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDecreaseMintableInterceptors() ?? []
    )
  }

  /// Unary call to RevokeLiquidityProvider
  ///
  /// - Parameters:
  ///   - request: Request to send to RevokeLiquidityProvider.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func revokeLiquidityProvider(
    _ request: Em_Issuer_V1_MsgRevokeLiquidityProvider,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Issuer_V1_MsgRevokeLiquidityProvider, Em_Issuer_V1_MsgRevokeLiquidityProviderResponse> {
    return self.makeUnaryCall(
      path: "/em.issuer.v1.Msg/RevokeLiquidityProvider",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRevokeLiquidityProviderInterceptors() ?? []
    )
  }

  /// Unary call to SetInflation
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInflation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setInflation(
    _ request: Em_Issuer_V1_MsgSetInflation,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Em_Issuer_V1_MsgSetInflation, Em_Issuer_V1_MsgSetInflationResponse> {
    return self.makeUnaryCall(
      path: "/em.issuer.v1.Msg/SetInflation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetInflationInterceptors() ?? []
    )
  }
}

internal protocol Em_Issuer_V1_MsgClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'increaseMintable'.
  func makeIncreaseMintableInterceptors() -> [ClientInterceptor<Em_Issuer_V1_MsgIncreaseMintable, Em_Issuer_V1_MsgIncreaseMintableResponse>]

  /// - Returns: Interceptors to use when invoking 'decreaseMintable'.
  func makeDecreaseMintableInterceptors() -> [ClientInterceptor<Em_Issuer_V1_MsgDecreaseMintable, Em_Issuer_V1_MsgDecreaseMintableResponse>]

  /// - Returns: Interceptors to use when invoking 'revokeLiquidityProvider'.
  func makeRevokeLiquidityProviderInterceptors() -> [ClientInterceptor<Em_Issuer_V1_MsgRevokeLiquidityProvider, Em_Issuer_V1_MsgRevokeLiquidityProviderResponse>]

  /// - Returns: Interceptors to use when invoking 'setInflation'.
  func makeSetInflationInterceptors() -> [ClientInterceptor<Em_Issuer_V1_MsgSetInflation, Em_Issuer_V1_MsgSetInflationResponse>]
}

internal final class Em_Issuer_V1_MsgClient: Em_Issuer_V1_MsgClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Em_Issuer_V1_MsgClientInterceptorFactoryProtocol?

  /// Creates a client for the em.issuer.v1.Msg service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Em_Issuer_V1_MsgClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Em_Issuer_V1_MsgProvider: CallHandlerProvider {
  var interceptors: Em_Issuer_V1_MsgServerInterceptorFactoryProtocol? { get }

  func increaseMintable(request: Em_Issuer_V1_MsgIncreaseMintable, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Issuer_V1_MsgIncreaseMintableResponse>

  func decreaseMintable(request: Em_Issuer_V1_MsgDecreaseMintable, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Issuer_V1_MsgDecreaseMintableResponse>

  func revokeLiquidityProvider(request: Em_Issuer_V1_MsgRevokeLiquidityProvider, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Issuer_V1_MsgRevokeLiquidityProviderResponse>

  func setInflation(request: Em_Issuer_V1_MsgSetInflation, context: StatusOnlyCallContext) -> EventLoopFuture<Em_Issuer_V1_MsgSetInflationResponse>
}

extension Em_Issuer_V1_MsgProvider {
  internal var serviceName: Substring { return "em.issuer.v1.Msg" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "IncreaseMintable":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Issuer_V1_MsgIncreaseMintable>(),
        responseSerializer: ProtobufSerializer<Em_Issuer_V1_MsgIncreaseMintableResponse>(),
        interceptors: self.interceptors?.makeIncreaseMintableInterceptors() ?? [],
        userFunction: self.increaseMintable(request:context:)
      )

    case "DecreaseMintable":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Issuer_V1_MsgDecreaseMintable>(),
        responseSerializer: ProtobufSerializer<Em_Issuer_V1_MsgDecreaseMintableResponse>(),
        interceptors: self.interceptors?.makeDecreaseMintableInterceptors() ?? [],
        userFunction: self.decreaseMintable(request:context:)
      )

    case "RevokeLiquidityProvider":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Issuer_V1_MsgRevokeLiquidityProvider>(),
        responseSerializer: ProtobufSerializer<Em_Issuer_V1_MsgRevokeLiquidityProviderResponse>(),
        interceptors: self.interceptors?.makeRevokeLiquidityProviderInterceptors() ?? [],
        userFunction: self.revokeLiquidityProvider(request:context:)
      )

    case "SetInflation":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Em_Issuer_V1_MsgSetInflation>(),
        responseSerializer: ProtobufSerializer<Em_Issuer_V1_MsgSetInflationResponse>(),
        interceptors: self.interceptors?.makeSetInflationInterceptors() ?? [],
        userFunction: self.setInflation(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Em_Issuer_V1_MsgServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'increaseMintable'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeIncreaseMintableInterceptors() -> [ServerInterceptor<Em_Issuer_V1_MsgIncreaseMintable, Em_Issuer_V1_MsgIncreaseMintableResponse>]

  /// - Returns: Interceptors to use when handling 'decreaseMintable'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDecreaseMintableInterceptors() -> [ServerInterceptor<Em_Issuer_V1_MsgDecreaseMintable, Em_Issuer_V1_MsgDecreaseMintableResponse>]

  /// - Returns: Interceptors to use when handling 'revokeLiquidityProvider'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeRevokeLiquidityProviderInterceptors() -> [ServerInterceptor<Em_Issuer_V1_MsgRevokeLiquidityProvider, Em_Issuer_V1_MsgRevokeLiquidityProviderResponse>]

  /// - Returns: Interceptors to use when handling 'setInflation'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetInflationInterceptors() -> [ServerInterceptor<Em_Issuer_V1_MsgSetInflation, Em_Issuer_V1_MsgSetInflationResponse>]
}
