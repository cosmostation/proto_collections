//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: comdex/oracle/v1beta1/msg.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `Comdex_Oracle_V1beta1_MsgServiceClient`, then call methods of this protocol to make API calls.
internal protocol Comdex_Oracle_V1beta1_MsgServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Comdex_Oracle_V1beta1_MsgServiceClientInterceptorFactoryProtocol? { get }

  func msgAddMarket(
    _ request: Comdex_Oracle_V1beta1_MsgAddMarketRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgAddMarketRequest, Comdex_Oracle_V1beta1_MsgAddMarketResponse>

  func msgUpdateMarket(
    _ request: Comdex_Oracle_V1beta1_MsgUpdateMarketRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgUpdateMarketRequest, Comdex_Oracle_V1beta1_MsgUpdateMarketResponse>

  func msgRemoveMarketForAsset(
    _ request: Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest, Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse>

  func msgFetchPrice(
    _ request: Comdex_Oracle_V1beta1_MsgFetchPriceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgFetchPriceRequest, Comdex_Oracle_V1beta1_MsgFetchPriceResponse>
}

extension Comdex_Oracle_V1beta1_MsgServiceClientProtocol {
  internal var serviceName: String {
    return "comdex.oracle.v1beta1.MsgService"
  }

  /// Unary call to MsgAddMarket
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgAddMarket.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgAddMarket(
    _ request: Comdex_Oracle_V1beta1_MsgAddMarketRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgAddMarketRequest, Comdex_Oracle_V1beta1_MsgAddMarketResponse> {
    return self.makeUnaryCall(
      path: "/comdex.oracle.v1beta1.MsgService/MsgAddMarket",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgAddMarketInterceptors() ?? []
    )
  }

  /// Unary call to MsgUpdateMarket
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgUpdateMarket.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgUpdateMarket(
    _ request: Comdex_Oracle_V1beta1_MsgUpdateMarketRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgUpdateMarketRequest, Comdex_Oracle_V1beta1_MsgUpdateMarketResponse> {
    return self.makeUnaryCall(
      path: "/comdex.oracle.v1beta1.MsgService/MsgUpdateMarket",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgUpdateMarketInterceptors() ?? []
    )
  }

  /// Unary call to MsgRemoveMarketForAsset
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgRemoveMarketForAsset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgRemoveMarketForAsset(
    _ request: Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest, Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse> {
    return self.makeUnaryCall(
      path: "/comdex.oracle.v1beta1.MsgService/MsgRemoveMarketForAsset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgRemoveMarketForAssetInterceptors() ?? []
    )
  }

  /// Unary call to MsgFetchPrice
  ///
  /// - Parameters:
  ///   - request: Request to send to MsgFetchPrice.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func msgFetchPrice(
    _ request: Comdex_Oracle_V1beta1_MsgFetchPriceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Comdex_Oracle_V1beta1_MsgFetchPriceRequest, Comdex_Oracle_V1beta1_MsgFetchPriceResponse> {
    return self.makeUnaryCall(
      path: "/comdex.oracle.v1beta1.MsgService/MsgFetchPrice",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMsgFetchPriceInterceptors() ?? []
    )
  }
}

internal protocol Comdex_Oracle_V1beta1_MsgServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'msgAddMarket'.
  func makeMsgAddMarketInterceptors() -> [ClientInterceptor<Comdex_Oracle_V1beta1_MsgAddMarketRequest, Comdex_Oracle_V1beta1_MsgAddMarketResponse>]

  /// - Returns: Interceptors to use when invoking 'msgUpdateMarket'.
  func makeMsgUpdateMarketInterceptors() -> [ClientInterceptor<Comdex_Oracle_V1beta1_MsgUpdateMarketRequest, Comdex_Oracle_V1beta1_MsgUpdateMarketResponse>]

  /// - Returns: Interceptors to use when invoking 'msgRemoveMarketForAsset'.
  func makeMsgRemoveMarketForAssetInterceptors() -> [ClientInterceptor<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest, Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse>]

  /// - Returns: Interceptors to use when invoking 'msgFetchPrice'.
  func makeMsgFetchPriceInterceptors() -> [ClientInterceptor<Comdex_Oracle_V1beta1_MsgFetchPriceRequest, Comdex_Oracle_V1beta1_MsgFetchPriceResponse>]
}

internal final class Comdex_Oracle_V1beta1_MsgServiceClient: Comdex_Oracle_V1beta1_MsgServiceClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Comdex_Oracle_V1beta1_MsgServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the comdex.oracle.v1beta1.MsgService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Comdex_Oracle_V1beta1_MsgServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Comdex_Oracle_V1beta1_MsgServiceProvider: CallHandlerProvider {
  var interceptors: Comdex_Oracle_V1beta1_MsgServiceServerInterceptorFactoryProtocol? { get }

  func msgAddMarket(request: Comdex_Oracle_V1beta1_MsgAddMarketRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Oracle_V1beta1_MsgAddMarketResponse>

  func msgUpdateMarket(request: Comdex_Oracle_V1beta1_MsgUpdateMarketRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Oracle_V1beta1_MsgUpdateMarketResponse>

  func msgRemoveMarketForAsset(request: Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse>

  func msgFetchPrice(request: Comdex_Oracle_V1beta1_MsgFetchPriceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Comdex_Oracle_V1beta1_MsgFetchPriceResponse>
}

extension Comdex_Oracle_V1beta1_MsgServiceProvider {
  internal var serviceName: Substring { return "comdex.oracle.v1beta1.MsgService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "MsgAddMarket":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Oracle_V1beta1_MsgAddMarketRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Oracle_V1beta1_MsgAddMarketResponse>(),
        interceptors: self.interceptors?.makeMsgAddMarketInterceptors() ?? [],
        userFunction: self.msgAddMarket(request:context:)
      )

    case "MsgUpdateMarket":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Oracle_V1beta1_MsgUpdateMarketRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Oracle_V1beta1_MsgUpdateMarketResponse>(),
        interceptors: self.interceptors?.makeMsgUpdateMarketInterceptors() ?? [],
        userFunction: self.msgUpdateMarket(request:context:)
      )

    case "MsgRemoveMarketForAsset":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse>(),
        interceptors: self.interceptors?.makeMsgRemoveMarketForAssetInterceptors() ?? [],
        userFunction: self.msgRemoveMarketForAsset(request:context:)
      )

    case "MsgFetchPrice":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Comdex_Oracle_V1beta1_MsgFetchPriceRequest>(),
        responseSerializer: ProtobufSerializer<Comdex_Oracle_V1beta1_MsgFetchPriceResponse>(),
        interceptors: self.interceptors?.makeMsgFetchPriceInterceptors() ?? [],
        userFunction: self.msgFetchPrice(request:context:)
      )

    default:
      return nil
    }
  }
}

internal protocol Comdex_Oracle_V1beta1_MsgServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'msgAddMarket'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgAddMarketInterceptors() -> [ServerInterceptor<Comdex_Oracle_V1beta1_MsgAddMarketRequest, Comdex_Oracle_V1beta1_MsgAddMarketResponse>]

  /// - Returns: Interceptors to use when handling 'msgUpdateMarket'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgUpdateMarketInterceptors() -> [ServerInterceptor<Comdex_Oracle_V1beta1_MsgUpdateMarketRequest, Comdex_Oracle_V1beta1_MsgUpdateMarketResponse>]

  /// - Returns: Interceptors to use when handling 'msgRemoveMarketForAsset'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgRemoveMarketForAssetInterceptors() -> [ServerInterceptor<Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetRequest, Comdex_Oracle_V1beta1_MsgRemoveMarketForAssetResponse>]

  /// - Returns: Interceptors to use when handling 'msgFetchPrice'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeMsgFetchPriceInterceptors() -> [ServerInterceptor<Comdex_Oracle_V1beta1_MsgFetchPriceRequest, Comdex_Oracle_V1beta1_MsgFetchPriceResponse>]
}
